var e=function(e){function r(r,t,a){e.call(this);for(var n=r.faces,o=r.vertices,i=o.length,f=3*n.length,h=[],s=0;s<n.length;s+=1)h.push(n[s].a,n[s].b,n[s].c);for(var v=new Uint32Array(t*f),c=0;c<t;c+=1)for(var m=0;m<f;m+=1)v[c*f+m]=h[m]+c*i;this.setIndex(new THREE.BufferAttribute(v,1));for(var d=new Float32Array(t*i*3),u=0,l=0;l<t;l+=1)for(var p=0;p<i;p+=1,u+=3){var E=o[p];d[u]=E.x,d[u+1]=E.y,d[u+2]=E.z}var S=new THREE.BufferAttribute(d,3);this.addAttribute("position",S);for(var g=0;g<a.length;g+=1){var w=new Float32Array(t*i*a[g].size),x=new THREE.BufferAttribute(w,a[g].size);this.addAttribute(a[g].name,x);for(var b=0;b<t;b+=1){var y=a[g].data(b,t);u=b*i*x.itemSize;for(var A=0;A<i;A+=1)for(var H=0;H<x.itemSize;H+=1)w[u]=y[H],u+=1}}return this}return e&&(r.__proto__=e),(r.prototype=Object.create(e&&e.prototype)).constructor=r,r}(THREE.BufferGeometry),r=function(r,t,a,n,o,i,f,h){var s=new e(r,a,n),v=new THREE.Mesh(s,t);return v.geometry.computeVertexNormals(),t.onBeforeCompile=function(e){v.shader=e,Object.assign(e.uniforms,o);var r=i.replace(/(\r\n|\n|\r)/gm,""),a=r.match(/.+?(?=void)/)[0],n=r.match(/main\(\){(.*?)}/)[1];e.vertexShader=a+" \n "+e.vertexShader,e.vertexShader=e.vertexShader.replace("#include <begin_vertex>",n.replace("gl_Position =","vec3 transformed ="));for(var s=0;s<h.length;s+=1)e.fragmentShader=e.fragmentShader.replace(h[s][0],h[s][1]);if(t.onBeforeCompile=t.onBeforeCompile.toString().slice(0,-1)+"/* "+Math.random()+" */}",f){var c=new THREE.ShaderMaterial({vertexShader:e.vertexShader,fragmentShader:THREE.ShaderLib.shadow.fragmentShader,uniforms:o});v.castShadow=!0,v.customDepthMaterial=c,v.customDistanceMaterial=c}},{mesh:v,uniforms:o}};THREE.Phenomenon=r;export default r;
